@page "/"
@layout MainLayout

<div class="page first-page">
    <div class="sidebar pb-0">
        <div class="top-row-sidebar px-4">
            <h1 class="name">@Model.Name</h1>
            <h4 class="function-title text-secondary">@Model.FunctionTitle</h4>
        </div>

        <div class="photo mb-3">
            <img src="images/photo-150x170.jpg" alt="Photo" />
        </div>

        <div class="table table-borderless table-sm">
            <table>
                @foreach (var item in Model.Contacts)
                {
                    <tr>
                        <td><i class="fa fa-lg fa-@item.IconClass text-primary"></i></td>
                        <td>
                            @if (item.Type == Models.ContactType.Website)
                            {
                                <a href="https://@item.Value" style="text-decoration: none; color: #212529;" target="_blank">
                                    @item.Value
                                </a>
                            }
                            else
                            {
                                @item.Value
                            }
                        </td>
                    </tr>
                }
                @foreach (var item in Model.SocialMedias)
                {
                    <tr>
                        <td><i class="fa fa-lg fa-@item.IconClass text-primary"></i></td>
                        <td>/@item.Value</td>
                    </tr>
                }
            </table>
        </div>

        <section>
            <h4 class="legend"><i class="fa fa-cogs"></i> Skills</h4>
            <dl>
                @foreach (var skill in Model.Skills)
                {
                    <dt class="skill-group-name mt-3"><i class="fa fa-@skill.IconClass"></i> @skill.Name</dt>
                    <dd>
                        @foreach (var item in skill.Items)
                        {
                            <span class="badge badge-primary badge-skill badge-skill-@item.Strength">@item.Name</span>
                        }
                    </dd>

                    if (skill.SkillSubGroups != null)
                        foreach (var subItem in skill.SkillSubGroups)
                        {
                            <dd>
                                <strong class="skill-subgroup-name"><i class="fa fa-@subItem.IconClass"></i> @subItem.Name:</strong>
                                @foreach (var item in subItem.Items)
                                {
                                    <span class="badge badge-primary badge-skill badge-skill-@item.Strength">@item.Name</span>
                                }
                            </dd>
                        }
                }

                <dt class="skill-group-name mt-4"><i class="fa fa-language"></i> Communication Languages</dt>
                <dd>
                    <ul class="text-primary">
                        @foreach (var language in Model.CommunicationLanguages)
                        {
                            <li>@language.Name <small>&mdash; @language.CommunicationLanguageLevel.ToString()</small></li>
                        }
                    </ul>
                </dd>
            </dl>
        </section>

        <section class="mt-4">
            <h4 class="legend"><i class="fa fa-trophy"></i> Awards</h4>
            <ul style="padding-left: 0.4em; list-style-type: none; " class="text-primary">
                @foreach (var award in Model.Awards)
                {
                    <li>
                        @award.Name <br />
                        <small>&mdash;@award.GivenBy <i class="fa fa-calendar"></i> @award.Year</small>
                    </li>
                }
            </ul>
        </section>

    </div>

    <div class="main">
        <div class="top-row px-4">
            <h1 class="name">@Model.Name</h1>
            <h4 class="function-title text-secondary">
                @Model.FunctionTitle
            </h4>
        </div>

        <div class="content px-4">

            <section class="mt-3">
                <h4 class="legend"><i class="fa fa-comment-o"></i> Profile</h4>
                <div class="pl-4 pb-2">@Model.Profile</div>
                <ul>
                    @foreach (var item in Model.Features)
                    {
                        <li>@((MarkupString)item)</li>
                    }
                </ul>
            </section>

            <section class="mt-2">
                <h4 class="legend"><i class="fa fa-briefcase"></i> Experience <span class="badge badge-primary badge-experience-year">@Model.ExperienceYears+ Years</span></h4>
                <ul class="timeline pl-3">
                    @foreach (var item in Model.Experiences)
                    {
                        <li>
                            <h5>@item.Title <small class="period"><i class="fa fa-calendar"></i> @item.StartYear - @item.EndYear</small></h5>
                            <div class="clear-both">@item.CompanyName, @item.City</div>
                            <div>@((MarkupString)item.Description)</div>
                        </li>
                    }
                </ul>
            </section>

            <section class="mt-2">
                <h4 class="legend"><i class="fa fa-graduation-cap"></i> Education</h4>
                <ul class="timeline pl-3">
                    @foreach (var item in Model.Educations)
                    {
                        <li>
                            <h5>@item.Title <small class="period"><i class="fa fa-calendar"></i> @item.StartYear - @item.EndYear</small></h5>
                            <div class="clear-both">@item.InstituteName, @item.City</div>
                            <div>@item.Result</div>
                        </li>
                    }
                </ul>
            </section>

        </div>
    </div>
</div>

<div class="page m-5">
    <section class="mt-2">
        <h4 class="legend"><i class="fa fa-list"></i> Projects</h4>
        <div class="list-group list-group-flush">
            @{ int projectNumber = 1;}

            @foreach (var item in Model.Projects)
            {
                <div class="list-group-item pl-0" style="break-inside: avoid;">
                    <h5>@(projectNumber++). @item.Title <small class="period"><i class="fa fa-calendar"></i> @item.Period</small></h5>
                    <div class="row clear-both">
                        <div class="col-md-6">
                            <div class="text-justify">@item.Description</div>
                            @*<div><strong>Client: </strong>@item.ClientName, @item.ClientCity</div>*@
                            @if (!string.IsNullOrEmpty(item.ProjectUrl))
                            {
                                <div><strong>URL: </strong>@item.ProjectUrl</div>
                            }
                        </div>
                        <div class="col-md-6">
                            <div><strong>Role: </strong>@item.Role</div>
                            <div><strong>Languages: </strong>@item.ProgrammingLanguages</div>
                            <div><strong>Frameworks: </strong>@item.UsedTechnologies</div>
                            <div><strong>Databases: </strong>@item.Databases</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>

    <section class="mt-4">
        <h4 class="legend"><i class="fa fa-magic"></i> Hobby Projects</h4>
        <p>
            Since my school life I have developed some applications with my own interest.
            Here are some notable mentions.
        </p>

        <div class="list-group list-group-flush">
            @{ projectNumber = 1;}

            @foreach (var item in Model.HobbyProjects)
            {
                <div class="list-group-item pl-0">
                    <h5>@(projectNumber++). @item.Title <small class="period"><i class="fa fa-calendar"></i> @item.Period</small></h5>
                    <div class="row clear-both">
                        <div class="col-md-6 pr-3">
                            <div class="text-justify">@item.Description</div>
                            @if (!string.IsNullOrEmpty(item.ProjectUrl))
                            {
                                <div><strong>URL: </strong>@item.ProjectUrl</div>
                            }
                        </div>
                        <div class="col-md-6 pl-3">
                            <div><strong>Technologies: </strong>@item.UsedTechnologies</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>

    <section class="mt-4">
        <h4 class="legend">
            <img src="/images/opensource.svg" style="margin-top: -5px;" /> Open-source contributions
        </h4>
        <div class="list-group list-group-flush">
            <div class="list-group-item pl-0">
                <h5>1. Serenity Platform </h5>
                <div>
                    <p>
                        Serenity is an ASP.NET Core / TypeScript application platform designed to simplify and
                        shorten development of data-centric business applications with a service based architecture.

                        It aims to make development easier while reducing maintenance costs by avoiding boiler-plate
                        code, reducing the time spent on repetitive tasks and applying best software design practices.
                    </p>
                </div>
                <p>
                    <div><strong>Repository: </strong><a class="text-decoration-none" href="https://github.com/serenity-is/Serenity">https://github.com/serenity-is/Serenity</a></div>
                    <div><strong>Website: </strong><a class="text-decoration-none" href="https://serenity.is/">https://serenity.is</a></div>
                    <div>
                        <strong>Contributions:  </strong>
                        <ul>
                            <li>Added support for oracle database</li>
                            <li>Enhanched code generation</li>
                            <li>Added method overloads for Sql <code>Sum</code>, <code>Agv</code>, <code>Min</code>, <code>Max</code> etc. which takes <code>IField</code> as parameter</li>
                            <li>AutoParam consistent after cloning <code>SqlQuery</code></li>
                            <li>Added <code>ForJson</code> SqlQuery method similar to <code>ForXml</code> method</li>
                            <li>Handled tabs with empty caption in the generated form</li>
                            <li>Added selectedItem getter in Select2Editor</li>
                            <li>Tab title localization in forms</li>
                            <li>Added Bengali localization</li>
                            <li>Giving a hint to fix "Specified cast is not valid." exception. </li>
                            <li>Some minor changes such as look and feel</li>
                        </ul>
                    </div>
                </p>
            </div>
        </div>
        <div class="list-group list-group-flush">
            <div class="list-group-item pl-0">
                <h5>2. Fluent Migrator </h5>
                <div>
                    <p>
                        Fluent Migrator is a migration framework for .NET
                        Migrations are a structured way to alter your database schema and are an alternative
                        to creating lots of sql scripts that have to be run manually by every developer involved.
                        Migrations solve the problem of evolving a database schema for multiple databases
                        (for example, the developer's local database, the test database and the production database).
                        Database schema changes are described in classes written in C# that can be checked into
                        a version control system.
                    </p>
                </div>
                <p>
                    <div><strong>Repository: </strong><a class="text-decoration-none" href="https://github.com/fluentmigrator/fluentmigrator">https://github.com/fluentmigrator/fluentmigrator</a></div>
                    <div><strong>Website: </strong><a class="text-decoration-none" href="https://fluentmigrator.github.io/">https://fluentmigrator.github.io</a></div>
                    <div>
                        <strong>Contributions:  </strong>
                        <ul>
                            <li>Oracle 12C supports object name max length = 128</li>
                        </ul>
                    </div>
                </p>
            </div>
        </div>
        <div class="list-group list-group-flush">
            <div class="list-group-item pl-0">
                <h5>3. Open CV Playgound </h5>
                <div>
                    <p>
                        A playground app for testing algorithms in OpenCV
                    </p>
                </div>
                <p>
                    <div><strong>Repository: </strong><a class="text-decoration-none" href="https://github.com/rexcardan/OpenCVPlaygound">https://github.com/rexcardan/OpenCVPlaygound</a></div>
                    <div>
                        <strong>Contributions:  </strong>
                        <ul>
                            <li>Updated OpenCvSharp to 4.4.0</li>
                        </ul>
                    </div>
                </p>
            </div>
        </div>
        <div class="list-group list-group-flush">
            <div class="list-group-item pl-0">
                <h5>4. Serenity.Extra </h5>
                <div>
                    <p>
                        Some extra features on top of Serenity Platform. Such as audit loging, theming, reporting
                        grid data inline editing, and some usefull utilities.
                        <br />
                        This repository and nuget package is being maintained by me.
                    </p>
                </div>
                <p>
                    <div><strong>Repository: </strong><a class="text-decoration-none" href="https://github.com/dfaruque/Serenity.Extra">https://github.com/dfaruque/Serenity.Extra</a></div>
                    <div><strong>Nuget: </strong><a class="text-decoration-none" href="https://www.nuget.org/packages/Serenity.Extra">https://www.nuget.org/packages/Serenity.Extra</a></div>
                </p>
            </div>
        </div>

    </section>

    <section class="mt-2 hide">
        <h4 class="legend"><i class="fa fa-link"></i> References</h4>
        <div class="row pl-4">
            @foreach (var item in Model.References)
            {
                <div class="col-md-5">
                    <h5>@item.Name</h5>
                    <div>@item.Position</div>
                    <div>@item.Organization</div>
                    <div>@item.Email</div>
                    <div>@item.Contact</div>
                </div>
            }
        </div>
    </section>
</div>

@code{
    Models.CVModel Model = new Models.CVModel();
}
